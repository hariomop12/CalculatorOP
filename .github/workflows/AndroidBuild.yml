name: Build and Release APK

on:
  push:
    branches:
      - master

permissions:
  contents: write
  actions: write

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # Step 3: Ensure Gradlew is executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step 4: Run unit tests
      - name: Run unit test
        run: ./gradlew clean testDebug

      # Step 5: Decrypt the keystore file and save it locally
      - name: Decrypt and Setup Keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > release.keystore

      # Step 6: Build the unsigned APK
      - name: Build Unsigned APK
        run: ./gradlew assembleRelease

      # Step 7: Sign the APK with the keystore
      - name: Sign the APK
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore release.keystore \
          -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
          -keypass ${{ secrets.KEY_PASSWORD }} \
          app/build/outputs/apk/release/app-release-unsigned.apk \
          ${{ secrets.KEY_ALIAS }}

      # Step 8: Align the APK
      - name: Zipalign the APK
        run: |
          # Dynamically find the latest build-tools version
          ZIPALIGN=$($ANDROID_HOME/build-tools/$(ls $ANDROID_HOME/build-tools | sort -V | tail -n 1)/zipalign)
          $ZIPALIGN -v 4 \
          app/build/outputs/apk/release/app-release-unsigned.apk \
          app/build/outputs/apk/release/app-release.apk

      # Step 9: Create a new release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}"
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false

      # Step 10: Upload the signed and aligned APK to the release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: CalculatorOP-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
